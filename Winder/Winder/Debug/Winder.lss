
Winder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000004ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000047a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004ce  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000500  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c37  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b5e  00000000  00000000  00001197  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004cc  00000000  00000000  00001cf5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000021c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000535  00000000  00000000  000021f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003b  00000000  00000000  0000272d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00002768  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	bf c1       	rjmp	.+894    	; 0x476 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void)
{
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	// Input/Output Ports initialization
	// Port A initialization
	// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
 102:	81 e2       	ldi	r24, 0x21	; 33
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	fc 01       	movw	r30, r24
 108:	10 82       	st	Z, r1
	// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTA=(0<<PA7) | (0<<PA6) | (0<<PA5) | (0<<PA4) | (0<<PA3) | (0<<PA2) | (0<<PA1) | (0<<PA0);
 10a:	82 e2       	ldi	r24, 0x22	; 34
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	fc 01       	movw	r30, r24
 110:	10 82       	st	Z, r1

	// Port B initialization
	// Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRB=(1<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
 112:	84 e2       	ldi	r24, 0x24	; 36
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	20 e8       	ldi	r18, 0x80	; 128
 118:	fc 01       	movw	r30, r24
 11a:	20 83       	st	Z, r18
	// State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTB=(0<<PB7) | (0<<PB6) | (0<<PB5) | (0<<PB4) | (0<<PB3) | (0<<PB2) | (0<<PB1) | (0<<PB0);
 11c:	85 e2       	ldi	r24, 0x25	; 37
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	fc 01       	movw	r30, r24
 122:	10 82       	st	Z, r1

	// Port C initialization
	// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
 124:	87 e2       	ldi	r24, 0x27	; 39
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	fc 01       	movw	r30, r24
 12a:	10 82       	st	Z, r1
	// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTC=(0<<PC7) | (0<<PC6) | (0<<PC5) | (0<<PC4) | (0<<PC3) | (0<<PC2) | (0<<PC1) | (0<<PC0);
 12c:	88 e2       	ldi	r24, 0x28	; 40
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	fc 01       	movw	r30, r24
 132:	10 82       	st	Z, r1

	// Port D initialization
	// Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
 134:	8a e2       	ldi	r24, 0x2A	; 42
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	20 e8       	ldi	r18, 0x80	; 128
 13a:	fc 01       	movw	r30, r24
 13c:	20 83       	st	Z, r18
	// State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTD=(0<<PD7) | (0<<PD6) | (0<<PD5) | (0<<PD4) | (0<<PD3) | (0<<PD2) | (0<<PD1) | (0<<PD0);
 13e:	8b e2       	ldi	r24, 0x2B	; 43
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	fc 01       	movw	r30, r24
 144:	10 82       	st	Z, r1

	// Port E initialization
	// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=In
	DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (1<<DDE1) | (0<<DDE0);
 146:	8d e2       	ldi	r24, 0x2D	; 45
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	22 e0       	ldi	r18, 0x02	; 2
 14c:	fc 01       	movw	r30, r24
 14e:	20 83       	st	Z, r18
	// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=0 Bit0=T
	PORTE=(0<<PE7) | (0<<PE6) | (0<<PE5) | (0<<PE4) | (0<<PE3) | (0<<PE2) | (0<<PE1) | (0<<PE0);
 150:	8e e2       	ldi	r24, 0x2E	; 46
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	fc 01       	movw	r30, r24
 156:	10 82       	st	Z, r1

	// Port F initialization
	// Function: Bit7=Out Bit6=Out Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=Out
	DDRF=(1<<DDF7) | (1<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (1<<DDF2) | (1<<DDF1) | (1<<DDF0);
 158:	80 e3       	ldi	r24, 0x30	; 48
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	27 ec       	ldi	r18, 0xC7	; 199
 15e:	fc 01       	movw	r30, r24
 160:	20 83       	st	Z, r18
	// State: Bit7=0 Bit6=0 Bit5=T Bit4=T Bit3=T Bit2=0 Bit1=0 Bit0=0
	PORTF=(0<<PF7) | (0<<PF6) | (0<<PF5) | (0<<PF4) | (0<<PF3) | (0<<PF2) | (0<<PF1) | (0<<PF0);
 162:	81 e3       	ldi	r24, 0x31	; 49
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	fc 01       	movw	r30, r24
 168:	10 82       	st	Z, r1

	// Port G initialization
	// Function: Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRG=(0<<DDG5) | (0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
 16a:	83 e3       	ldi	r24, 0x33	; 51
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	fc 01       	movw	r30, r24
 170:	10 82       	st	Z, r1
	// State: Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTG=(0<<PG5) | (0<<PG4) | (0<<PG3) | (0<<PG2) | (0<<PG1) | (0<<PG0);
 172:	84 e3       	ldi	r24, 0x34	; 52
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	fc 01       	movw	r30, r24
 178:	10 82       	st	Z, r1

	// Port H initialization
	// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRH=(0<<DDH7) | (0<<DDH6) | (0<<DDH5) | (0<<DDH4) | (0<<DDH3) | (0<<DDH2) | (0<<DDH1) | (0<<DDH0);
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	fc 01       	movw	r30, r24
 180:	10 82       	st	Z, r1
	// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTH=(0<<PH7) | (0<<PH6) | (0<<PH5) | (0<<PH4) | (0<<PH3) | (0<<PH2) | (0<<PH1) | (0<<PH0);
 182:	82 e0       	ldi	r24, 0x02	; 2
 184:	91 e0       	ldi	r25, 0x01	; 1
 186:	fc 01       	movw	r30, r24
 188:	10 82       	st	Z, r1

	// Port J initialization
	// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRJ=(0<<DDJ7) | (0<<DDJ6) | (0<<DDJ5) | (0<<DDJ4) | (0<<DDJ3) | (0<<DDJ2) | (0<<DDJ1) | (0<<DDJ0);
 18a:	84 e0       	ldi	r24, 0x04	; 4
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	fc 01       	movw	r30, r24
 190:	10 82       	st	Z, r1
	// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTJ=(0<<PJ7) | (0<<PJ6) | (0<<PJ5) | (0<<PJ4) | (0<<PJ3) | (0<<PJ2) | (0<<PJ1) | (0<<PJ0);
 192:	85 e0       	ldi	r24, 0x05	; 5
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	fc 01       	movw	r30, r24
 198:	10 82       	st	Z, r1

	// Port K initialization
	// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRK=(0<<DDK7) | (0<<DDK6) | (0<<DDK5) | (0<<DDK4) | (0<<DDK3) | (0<<DDK2) | (0<<DDK1) | (0<<DDK0);
 19a:	87 e0       	ldi	r24, 0x07	; 7
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	fc 01       	movw	r30, r24
 1a0:	10 82       	st	Z, r1
	// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTK=(0<<PK7) | (0<<PK6) | (0<<PK5) | (0<<PK4) | (0<<PK3) | (0<<PK2) | (0<<PK1) | (0<<PK0);
 1a2:	88 e0       	ldi	r24, 0x08	; 8
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	fc 01       	movw	r30, r24
 1a8:	10 82       	st	Z, r1

	// Port L initialization
	// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRL=(0<<DDL7) | (0<<DDL6) | (0<<DDL5) | (0<<DDL4) | (0<<DDL3) | (0<<DDL2) | (0<<DDL1) | (0<<DDL0);
 1aa:	8a e0       	ldi	r24, 0x0A	; 10
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	fc 01       	movw	r30, r24
 1b0:	10 82       	st	Z, r1
	// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTL=(0<<PL7) | (0<<PL6) | (0<<PL5) | (0<<PL4) | (0<<PL3) | (0<<PL2) | (0<<PL1) | (0<<PL0);
 1b2:	8b e0       	ldi	r24, 0x0B	; 11
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	fc 01       	movw	r30, r24
 1b8:	10 82       	st	Z, r1
	// Clock source: System Clock
	// Clock value: Timer 0 Stopped
	// Mode: Normal top=0xFF
	// OC0A output: Disconnected
	// OC0B output: Disconnected
	TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
 1ba:	84 e4       	ldi	r24, 0x44	; 68
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	fc 01       	movw	r30, r24
 1c0:	10 82       	st	Z, r1
	TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
 1c2:	85 e4       	ldi	r24, 0x45	; 69
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	fc 01       	movw	r30, r24
 1c8:	10 82       	st	Z, r1
	TCNT0=0x00;
 1ca:	86 e4       	ldi	r24, 0x46	; 70
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	fc 01       	movw	r30, r24
 1d0:	10 82       	st	Z, r1
	OCR0A=0x00;
 1d2:	87 e4       	ldi	r24, 0x47	; 71
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	fc 01       	movw	r30, r24
 1d8:	10 82       	st	Z, r1
	OCR0B=0x00;
 1da:	88 e4       	ldi	r24, 0x48	; 72
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	fc 01       	movw	r30, r24
 1e0:	10 82       	st	Z, r1
	// Timer1 Overflow Interrupt: Off
	// Input Capture Interrupt: Off
	// Compare A Match Interrupt: Off
	// Compare B Match Interrupt: Off
	// Compare C Match Interrupt: Off
	TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
 1e2:	80 e8       	ldi	r24, 0x80	; 128
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	fc 01       	movw	r30, r24
 1e8:	10 82       	st	Z, r1
	TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
 1ea:	81 e8       	ldi	r24, 0x81	; 129
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	fc 01       	movw	r30, r24
 1f0:	10 82       	st	Z, r1
	TCNT1H=0x00;
 1f2:	85 e8       	ldi	r24, 0x85	; 133
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	fc 01       	movw	r30, r24
 1f8:	10 82       	st	Z, r1
	TCNT1L=0x00;
 1fa:	84 e8       	ldi	r24, 0x84	; 132
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	fc 01       	movw	r30, r24
 200:	10 82       	st	Z, r1
	ICR1H=0x00;
 202:	87 e8       	ldi	r24, 0x87	; 135
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	fc 01       	movw	r30, r24
 208:	10 82       	st	Z, r1
	ICR1L=0x00;
 20a:	86 e8       	ldi	r24, 0x86	; 134
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	fc 01       	movw	r30, r24
 210:	10 82       	st	Z, r1
	OCR1AH=0x00;
 212:	89 e8       	ldi	r24, 0x89	; 137
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	fc 01       	movw	r30, r24
 218:	10 82       	st	Z, r1
	OCR1AL=0x00;
 21a:	88 e8       	ldi	r24, 0x88	; 136
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	fc 01       	movw	r30, r24
 220:	10 82       	st	Z, r1
	OCR1BH=0x00;
 222:	8b e8       	ldi	r24, 0x8B	; 139
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	fc 01       	movw	r30, r24
 228:	10 82       	st	Z, r1
	OCR1BL=0x00;
 22a:	8a e8       	ldi	r24, 0x8A	; 138
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	fc 01       	movw	r30, r24
 230:	10 82       	st	Z, r1
	OCR1CH=0x00;
 232:	8d e8       	ldi	r24, 0x8D	; 141
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	fc 01       	movw	r30, r24
 238:	10 82       	st	Z, r1
	OCR1CL=0x00;
 23a:	8c e8       	ldi	r24, 0x8C	; 140
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	fc 01       	movw	r30, r24
 240:	10 82       	st	Z, r1
	// Clock source: System Clock
	// Clock value: Timer2 Stopped
	// Mode: Normal top=0xFF
	// OC2A output: Disconnected
	// OC2B output: Disconnected
	ASSR=(0<<EXCLK) | (0<<AS2);
 242:	86 eb       	ldi	r24, 0xB6	; 182
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	fc 01       	movw	r30, r24
 248:	10 82       	st	Z, r1
	TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
 24a:	80 eb       	ldi	r24, 0xB0	; 176
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	fc 01       	movw	r30, r24
 250:	10 82       	st	Z, r1
	TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
 252:	81 eb       	ldi	r24, 0xB1	; 177
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	fc 01       	movw	r30, r24
 258:	10 82       	st	Z, r1
	TCNT2=0x00;
 25a:	82 eb       	ldi	r24, 0xB2	; 178
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	fc 01       	movw	r30, r24
 260:	10 82       	st	Z, r1
	OCR2A=0x00;
 262:	83 eb       	ldi	r24, 0xB3	; 179
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	fc 01       	movw	r30, r24
 268:	10 82       	st	Z, r1
	OCR2B=0x00;
 26a:	84 eb       	ldi	r24, 0xB4	; 180
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	fc 01       	movw	r30, r24
 270:	10 82       	st	Z, r1
	// Timer3 Overflow Interrupt: Off
	// Input Capture Interrupt: Off
	// Compare A Match Interrupt: Off
	// Compare B Match Interrupt: Off
	// Compare C Match Interrupt: Off
	TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
 272:	80 e9       	ldi	r24, 0x90	; 144
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	fc 01       	movw	r30, r24
 278:	10 82       	st	Z, r1
	TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
 27a:	81 e9       	ldi	r24, 0x91	; 145
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	fc 01       	movw	r30, r24
 280:	10 82       	st	Z, r1
	TCNT3H=0x00;
 282:	85 e9       	ldi	r24, 0x95	; 149
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	fc 01       	movw	r30, r24
 288:	10 82       	st	Z, r1
	TCNT3L=0x00;
 28a:	84 e9       	ldi	r24, 0x94	; 148
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	fc 01       	movw	r30, r24
 290:	10 82       	st	Z, r1
	ICR3H=0x00;
 292:	87 e9       	ldi	r24, 0x97	; 151
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	fc 01       	movw	r30, r24
 298:	10 82       	st	Z, r1
	ICR3L=0x00;
 29a:	86 e9       	ldi	r24, 0x96	; 150
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	fc 01       	movw	r30, r24
 2a0:	10 82       	st	Z, r1
	OCR3AH=0x00;
 2a2:	89 e9       	ldi	r24, 0x99	; 153
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	fc 01       	movw	r30, r24
 2a8:	10 82       	st	Z, r1
	OCR3AL=0x00;
 2aa:	88 e9       	ldi	r24, 0x98	; 152
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	fc 01       	movw	r30, r24
 2b0:	10 82       	st	Z, r1
	OCR3BH=0x00;
 2b2:	8b e9       	ldi	r24, 0x9B	; 155
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	fc 01       	movw	r30, r24
 2b8:	10 82       	st	Z, r1
	OCR3BL=0x00;
 2ba:	8a e9       	ldi	r24, 0x9A	; 154
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	fc 01       	movw	r30, r24
 2c0:	10 82       	st	Z, r1
	OCR3CH=0x00;
 2c2:	8d e9       	ldi	r24, 0x9D	; 157
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	fc 01       	movw	r30, r24
 2c8:	10 82       	st	Z, r1
	OCR3CL=0x00;
 2ca:	8c e9       	ldi	r24, 0x9C	; 156
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	fc 01       	movw	r30, r24
 2d0:	10 82       	st	Z, r1
	// Timer4 Overflow Interrupt: Off
	// Input Capture Interrupt: Off
	// Compare A Match Interrupt: Off
	// Compare B Match Interrupt: Off
	// Compare C Match Interrupt: Off
	TCCR4A=(0<<COM4A1) | (0<<COM4A0) | (0<<COM4B1) | (0<<COM4B0) | (0<<COM4C1) | (0<<COM4C0) | (0<<WGM41) | (0<<WGM40);
 2d2:	80 ea       	ldi	r24, 0xA0	; 160
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	fc 01       	movw	r30, r24
 2d8:	10 82       	st	Z, r1
	TCCR4B=(0<<ICNC4) | (0<<ICES4) | (0<<WGM43) | (0<<WGM42) | (0<<CS42) | (0<<CS41) | (0<<CS40);
 2da:	81 ea       	ldi	r24, 0xA1	; 161
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	fc 01       	movw	r30, r24
 2e0:	10 82       	st	Z, r1
	TCNT4H=0x00;
 2e2:	85 ea       	ldi	r24, 0xA5	; 165
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	fc 01       	movw	r30, r24
 2e8:	10 82       	st	Z, r1
	TCNT4L=0x00;
 2ea:	84 ea       	ldi	r24, 0xA4	; 164
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	fc 01       	movw	r30, r24
 2f0:	10 82       	st	Z, r1
	ICR4H=0x00;
 2f2:	87 ea       	ldi	r24, 0xA7	; 167
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	fc 01       	movw	r30, r24
 2f8:	10 82       	st	Z, r1
	ICR4L=0x00;
 2fa:	86 ea       	ldi	r24, 0xA6	; 166
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	fc 01       	movw	r30, r24
 300:	10 82       	st	Z, r1
	OCR4AH=0x00;
 302:	89 ea       	ldi	r24, 0xA9	; 169
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	fc 01       	movw	r30, r24
 308:	10 82       	st	Z, r1
	OCR4AL=0x00;
 30a:	88 ea       	ldi	r24, 0xA8	; 168
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	fc 01       	movw	r30, r24
 310:	10 82       	st	Z, r1
	OCR4BH=0x00;
 312:	8b ea       	ldi	r24, 0xAB	; 171
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	fc 01       	movw	r30, r24
 318:	10 82       	st	Z, r1
	OCR4BL=0x00;
 31a:	8a ea       	ldi	r24, 0xAA	; 170
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	fc 01       	movw	r30, r24
 320:	10 82       	st	Z, r1
	OCR4CH=0x00;
 322:	8d ea       	ldi	r24, 0xAD	; 173
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	fc 01       	movw	r30, r24
 328:	10 82       	st	Z, r1
	OCR4CL=0x00;
 32a:	8c ea       	ldi	r24, 0xAC	; 172
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	fc 01       	movw	r30, r24
 330:	10 82       	st	Z, r1
	// Timer5 Overflow Interrupt: Off
	// Input Capture Interrupt: Off
	// Compare A Match Interrupt: Off
	// Compare B Match Interrupt: Off
	// Compare C Match Interrupt: Off
	TCCR5A=(0<<COM5A1) | (0<<COM5A0) | (0<<COM5B1) | (0<<COM5B0) | (0<<COM5C1) | (0<<COM5C0) | (0<<WGM51) | (0<<WGM50);
 332:	80 e2       	ldi	r24, 0x20	; 32
 334:	91 e0       	ldi	r25, 0x01	; 1
 336:	fc 01       	movw	r30, r24
 338:	10 82       	st	Z, r1
	TCCR5B=(0<<ICNC5) | (0<<ICES5) | (0<<WGM53) | (0<<WGM52) | (0<<CS52) | (0<<CS51) | (0<<CS50);
 33a:	81 e2       	ldi	r24, 0x21	; 33
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	fc 01       	movw	r30, r24
 340:	10 82       	st	Z, r1
	TCNT5H=0x00;
 342:	85 e2       	ldi	r24, 0x25	; 37
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	fc 01       	movw	r30, r24
 348:	10 82       	st	Z, r1
	TCNT5L=0x00;
 34a:	84 e2       	ldi	r24, 0x24	; 36
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	fc 01       	movw	r30, r24
 350:	10 82       	st	Z, r1
	ICR5H=0x00;
 352:	87 e2       	ldi	r24, 0x27	; 39
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	fc 01       	movw	r30, r24
 358:	10 82       	st	Z, r1
	ICR5L=0x00;
 35a:	86 e2       	ldi	r24, 0x26	; 38
 35c:	91 e0       	ldi	r25, 0x01	; 1
 35e:	fc 01       	movw	r30, r24
 360:	10 82       	st	Z, r1
	OCR5AH=0x00;
 362:	89 e2       	ldi	r24, 0x29	; 41
 364:	91 e0       	ldi	r25, 0x01	; 1
 366:	fc 01       	movw	r30, r24
 368:	10 82       	st	Z, r1
	OCR5AL=0x00;
 36a:	88 e2       	ldi	r24, 0x28	; 40
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	fc 01       	movw	r30, r24
 370:	10 82       	st	Z, r1
	OCR5BH=0x00;
 372:	8b e2       	ldi	r24, 0x2B	; 43
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	fc 01       	movw	r30, r24
 378:	10 82       	st	Z, r1
	OCR5BL=0x00;
 37a:	8a e2       	ldi	r24, 0x2A	; 42
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	fc 01       	movw	r30, r24
 380:	10 82       	st	Z, r1
	OCR5CH=0x00;
 382:	8d e2       	ldi	r24, 0x2D	; 45
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	fc 01       	movw	r30, r24
 388:	10 82       	st	Z, r1
	OCR5CL=0x00;
 38a:	8c e2       	ldi	r24, 0x2C	; 44
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	fc 01       	movw	r30, r24
 390:	10 82       	st	Z, r1

	// Timer/Counter 0 Interrupt(s) initialization
	TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
 392:	8e e6       	ldi	r24, 0x6E	; 110
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	fc 01       	movw	r30, r24
 398:	10 82       	st	Z, r1

	// Timer/Counter 1 Interrupt(s) initialization
	TIMSK1=(0<<ICIE1) | (0<<OCIE1C) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
 39a:	8f e6       	ldi	r24, 0x6F	; 111
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	fc 01       	movw	r30, r24
 3a0:	10 82       	st	Z, r1

	// Timer/Counter 2 Interrupt(s) initialization
	TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
 3a2:	80 e7       	ldi	r24, 0x70	; 112
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	fc 01       	movw	r30, r24
 3a8:	10 82       	st	Z, r1

	// Timer/Counter 3 Interrupt(s) initialization
	TIMSK3=(0<<ICIE3) | (0<<OCIE3C) | (0<<OCIE3B) | (0<<OCIE3A) | (0<<TOIE3);
 3aa:	81 e7       	ldi	r24, 0x71	; 113
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	fc 01       	movw	r30, r24
 3b0:	10 82       	st	Z, r1

	// Timer/Counter 4 Interrupt(s) initialization
	TIMSK4=(0<<ICIE4) | (0<<OCIE4C) | (0<<OCIE4B) | (0<<OCIE4A) | (0<<TOIE4);
 3b2:	82 e7       	ldi	r24, 0x72	; 114
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	fc 01       	movw	r30, r24
 3b8:	10 82       	st	Z, r1

	// Timer/Counter 5 Interrupt(s) initialization
	TIMSK5=(0<<ICIE5) | (0<<OCIE5C) | (0<<OCIE5B) | (0<<OCIE5A) | (0<<TOIE5);
 3ba:	83 e7       	ldi	r24, 0x73	; 115
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	fc 01       	movw	r30, r24
 3c0:	10 82       	st	Z, r1
	// INT3: Off
	// INT4: Off
	// INT5: Off
	// INT6: Off
	// INT7: Off
	EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
 3c2:	89 e6       	ldi	r24, 0x69	; 105
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	fc 01       	movw	r30, r24
 3c8:	10 82       	st	Z, r1
	EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
 3ca:	8a e6       	ldi	r24, 0x6A	; 106
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	fc 01       	movw	r30, r24
 3d0:	10 82       	st	Z, r1
	EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
 3d2:	8d e3       	ldi	r24, 0x3D	; 61
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	fc 01       	movw	r30, r24
 3d8:	10 82       	st	Z, r1
	// PCINT19 interrupt: Off
	// PCINT20 interrupt: Off
	// PCINT21 interrupt: Off
	// PCINT22 interrupt: Off
	// PCINT23 interrupt: Off
	PCMSK0=(0<<PCINT7) | (0<<PCINT6) | (0<<PCINT5) | (0<<PCINT4) | (0<<PCINT3) | (0<<PCINT2) | (0<<PCINT1) | (0<<PCINT0);
 3da:	8b e6       	ldi	r24, 0x6B	; 107
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	fc 01       	movw	r30, r24
 3e0:	10 82       	st	Z, r1
	PCMSK1=(0<<PCINT15) | (0<<PCINT14) | (0<<PCINT13) | (0<<PCINT12) | (0<<PCINT11) | (0<<PCINT10) | (0<<PCINT9) | (0<<PCINT8);
 3e2:	8c e6       	ldi	r24, 0x6C	; 108
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	fc 01       	movw	r30, r24
 3e8:	10 82       	st	Z, r1
	PCMSK2=(0<<PCINT23) | (0<<PCINT22) | (0<<PCINT21) | (0<<PCINT20) | (0<<PCINT19) | (0<<PCINT18) | (0<<PCINT17) | (0<<PCINT16);
 3ea:	8d e6       	ldi	r24, 0x6D	; 109
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	fc 01       	movw	r30, r24
 3f0:	10 82       	st	Z, r1
	PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
 3f2:	88 e6       	ldi	r24, 0x68	; 104
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	fc 01       	movw	r30, r24
 3f8:	10 82       	st	Z, r1
	// Communication Parameters: 8 Data, 1 Stop, No Parity
	// USART0 Receiver: On
	// USART0 Transmitter: On
	// USART0 Mode: Asynchronous
	// USART0 Baud Rate: 9600
	UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
 3fa:	80 ec       	ldi	r24, 0xC0	; 192
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	fc 01       	movw	r30, r24
 400:	10 82       	st	Z, r1
	UCSR0B=(1<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
 402:	81 ec       	ldi	r24, 0xC1	; 193
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	28 e9       	ldi	r18, 0x98	; 152
 408:	fc 01       	movw	r30, r24
 40a:	20 83       	st	Z, r18
	UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
 40c:	82 ec       	ldi	r24, 0xC2	; 194
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	26 e0       	ldi	r18, 0x06	; 6
 412:	fc 01       	movw	r30, r24
 414:	20 83       	st	Z, r18
	UBRR0H=0x00;
 416:	85 ec       	ldi	r24, 0xC5	; 197
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	fc 01       	movw	r30, r24
 41c:	10 82       	st	Z, r1
	UBRR0L=0x67;
 41e:	84 ec       	ldi	r24, 0xC4	; 196
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	27 e6       	ldi	r18, 0x67	; 103
 424:	fc 01       	movw	r30, r24
 426:	20 83       	st	Z, r18

	// USART1 initialization
	// USART1 disabled
	UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
 428:	89 ec       	ldi	r24, 0xC9	; 201
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	fc 01       	movw	r30, r24
 42e:	10 82       	st	Z, r1

	// USART2 initialization
	// USART2 disabled
	UCSR2B=(0<<RXCIE2) | (0<<TXCIE2) | (0<<UDRIE2) | (0<<RXEN2) | (0<<TXEN2) | (0<<UCSZ22) | (0<<RXB82) | (0<<TXB82);
 430:	81 ed       	ldi	r24, 0xD1	; 209
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	fc 01       	movw	r30, r24
 436:	10 82       	st	Z, r1

	// USART3 initialization
	// USART3 disabled
	UCSR3B=(0<<RXCIE3) | (0<<TXCIE3) | (0<<UDRIE3) | (0<<RXEN3) | (0<<TXEN3) | (0<<UCSZ32) | (0<<RXB83) | (0<<TXB83);
 438:	81 e3       	ldi	r24, 0x31	; 49
 43a:	91 e0       	ldi	r25, 0x01	; 1
 43c:	fc 01       	movw	r30, r24
 43e:	10 82       	st	Z, r1
	// Analog Comparator: Off
	// The Analog Comparator's positive input is
	// connected to the AIN0 pin
	// The Analog Comparator's negative input is
	// connected to the AIN1 pin
	ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
 440:	80 e5       	ldi	r24, 0x50	; 80
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	20 e8       	ldi	r18, 0x80	; 128
 446:	fc 01       	movw	r30, r24
 448:	20 83       	st	Z, r18
	ADCSRB=(0<<ACME);
 44a:	8b e7       	ldi	r24, 0x7B	; 123
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	fc 01       	movw	r30, r24
 450:	10 82       	st	Z, r1
	// Digital input buffer on AIN0: On
	// Digital input buffer on AIN1: On
	DIDR1=(0<<AIN0D) | (0<<AIN1D);
 452:	8f e7       	ldi	r24, 0x7F	; 127
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	fc 01       	movw	r30, r24
 458:	10 82       	st	Z, r1

	// ADC initialization
	// ADC disabled
	ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
 45a:	8a e7       	ldi	r24, 0x7A	; 122
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	fc 01       	movw	r30, r24
 460:	10 82       	st	Z, r1

	// SPI initialization
	// SPI disabled
	SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
 462:	8c e4       	ldi	r24, 0x4C	; 76
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	fc 01       	movw	r30, r24
 468:	10 82       	st	Z, r1

	// TWI initialization
	// TWI disabled
	TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
 46a:	8c eb       	ldi	r24, 0xBC	; 188
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	fc 01       	movw	r30, r24
 470:	10 82       	st	Z, r1
	sei();
 472:	78 94       	sei
	
    while (1) 
 474:	ff cf       	rjmp	.-2      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>

00000476 <_exit>:
 476:	f8 94       	cli

00000478 <__stop_program>:
 478:	ff cf       	rjmp	.-2      	; 0x478 <__stop_program>
